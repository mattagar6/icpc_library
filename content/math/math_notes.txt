
GCD things:

	i * x % m takes on m / gcd(x, m) different values in a cycle over all 0 <= i

Convex Hulls:
	Maintaining Upper convex hull of lines
		1. Sort lines in decreasing slope
		2. Maintain hull as a stack
		3. When adding a new (rightmost) line C to hull
			- let hull = [..., A, B]
			- to add C to hull, need C.intersect(A) < C.intersect(B)
				- The lines A, B, C, should make an "A" shape
				- if not the case, pop B from the hull
				- Can do this without floating points, just hace to compare fractions!
				- Example submission: https://codeforces.com/gym/102500/submission/132934198
	Example submission with Lower convex hull: https://pastebin.com/EKMaTW36
	
	Convex hull of points: https://cses.fi/problemset/result/3148356/ (lower hull, then upper hull)

Fractions:
	
	if a/b is in simplest terms, then the simplest terms for k + (a/b) is
			(k*b + a) / b, since gcd(a,b) == 1, by definition
			
	Continued fractions:
		- See this problem/editorial:
			- Problem: https://dmoj.ca/problem/dmopc19c7p4
			- Editorial: https://dmoj.ca/problem/dmopc19c7p4/editorial
			- Can use matrices to simulate the process of "concatenating" continued fractions together
			  (2x2 matrix to maintain numerator, denominator of fraction)
